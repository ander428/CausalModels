% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/doubly_robust.R
\name{doubly_robust}
\alias{doubly_robust}
\title{Parametric IP Weighting}
\usage{
doubly_robust(
  data,
  f = NA,
  family = gaussian(),
  simple = pkg.env$simple,
  p.f = NA,
  p.simple = pkg.env$simple,
  p.family = binomial(),
  p.scores = NA,
  ...
)
}
\arguments{
\item{data}{a data frame containing the variables in the model.
This should be the same data used in \code{\link[=init_params]{init_params}}.}

\item{f}{(optional) an object of class "formula" that overrides the default parameter}

\item{family}{the family to be used in the general linear model.
By default, this is set to \code{\link[stats:gaussian]{gaussian}}.}

\item{simple}{a boolean indicator to build default formula with interactions.
If true, interactions will be excluded. If false, interactions will be included. By
default, simple is set to false.}

\item{p.f}{(optional) an object of class "formula" that overrides the default formula for the denominator of the IP
weighting function.}

\item{p.simple}{a boolean indicator to build default formula with interactions for the propensity models.
If true, interactions will be excluded. If false, interactions will be included. By
default, simple is set to false.
NOTE: if this is changed, the coefficient for treatment may not accurately represent the average causal effect.}

\item{p.family}{the family to be used in the underlying propensity model.
By default, this is set to \code{\link[stats:gaussian]{binomial}}.}

\item{p.scores}{(optional) use calculated propensity scores for the weights. If using standardized weights,
the numerator will still be modeled.}

\item{...}{additional arguments that may be passed to the underlying \code{\link[stats:glm]{glm}} model.}
}
\value{
\code{doubly_robust} returns an object of \code{\link[base:class]{class} "doubly_robust"}.

The functions \code{print}, \code{summary}, and \code{predict} can be used to interact with
the underlying \code{glm} model.

An object of class \code{"doubly_robust"} is a list containing the following:

\tabular{ll}{
 \code{call} \tab the matched call. \cr
 \tab \cr
 \code{formula} \tab the formula used in the model. \cr
 \tab \cr
 \code{model} \tab the underlying glm model. \cr
 \tab \cr
 \code{weights} \tab the estimated IP weights. \cr
 \tab \cr
 \code{ATE} \tab the estimated average treatment effect (risk difference). \cr
 \tab \cr
 \code{ATE.summary} \tab a data frame containing the ATE, SE, and 95\% CI of the ATE. \cr
}
}
\description{
`doubly_robust` uses the \code{\link[=propensity_scores]{propensity_scores}} function to generate inverse probability
weights. The weights can either be standardized weights or non-standardized weights. The weights are used to train a
general linear model whose coefficient for treatment represents the average treatment effect on the additive scale.
}
\examples{
library(causaldata)
data(nhefs)
nhefs.nmv <- nhefs[which(!is.na(nhefs$wt82)),]
nhefs.nmv$qsmk <- as.factor(nhefs.nmv$qsmk)

confounders <- c("sex", "race", "age", "education", "smokeintensity",
                     "smokeyrs", "exercise", "active", "wt71")

init_params(wt82_71, qsmk,
            covariates = confounders,
            data = nhefs.nmv)

# model using all defaults
model <- doubly_robust(data = nhefs.nmv)
summary(model)

# Model using calculated propensity scores and manual outcome formula
p.scores <- propensity_scores(nhefs.nmv)$p.scores
model <- doubly_robust(wt82_71 ~ qsmk, p.scores = p.scores, data = nhefs.nmv)
summary(model)
}
