% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stdm.R
\name{stdm}
\alias{stdm}
\title{Parametric Standardization}
\usage{
stdm(
  data,
  f = NA,
  family = gaussian(),
  simple = pkg.env$simple,
  p.f = NA,
  p.simple = pkg.env$simple,
  p.family = binomial(),
  p.scores = NA,
  SW = T,
  ...
)
}
\arguments{
\item{data}{a data frame containing the variables in the model.
This should be the same data used in \code{\link[init_params]{init_params}}.}

\item{f}{(optional) an object of class "formula" that overrides the default parameter}

\item{family}{the family to be used in the general linear model.
By default, this is set to \code{\link[stats:gaussian]{gaussian}}.}

\item{simple}{a boolean indicator to build default formula with interactions.
If true, interactions will be excluded. If false, interactions will be included. By
default, simple is set to false.
NOTE: if this is changed, the coefficient for treatment may not accurately represent the average causal effect.}

\item{...}{additional arguments that may be passed to the underlying \code{\link[stats:glm]{glm}} model.}
}
\value{
\code{stdm} returns an object of \code{\link[base::class]{class} "stdm"}.

The function \code{summary} can be used to obtain and print a summary of the underlying glm outcome model.

An object of class \code{"stdm"} is a list containing the following:

\tabular{ll}{
 \code{call} \tab the matched call. \cr
 \tab \cr
 \code{formula} \tab the formula used in the model. \cr
 \tab \cr
 \code{model} \tab the underlying glm model. \cr
 \tab \cr
 \code{ATE} \tab the estimated average treatment effect. \cr
 \tab \cr
 \code{ATE.summary} \tab a data frame containing the ATE, SE, and 95\% CI of the ATE. \cr
}
}
\description{
`stdm` uses a standard \code{\link[stats:glm]{glm}} linear model to perform parametric standardization
by adjusting bias through including all confounders as covariates. The coefficient of treatment is the estimated
average causal effect.
}
\examples{
library(causaldata)
data(nhefs)
nhefs.nmv <- nhefs[which(!is.na(nhefs$wt82)),]
nhefs.nmv$qsmk <- as.factor(nhefs.nmv$qsmk)

confounders <- c("sex", "race", "age", "education", "smokeintensity",
                     "smokeyrs", "exercise", "active", "wt71")

init_params(wt82_71, qsmk,
            covariates = confounders,
            data = nhefs.nmv)

# model using all defaults
model <- stdm(data = nhefs.nmv)
summary(model)
}
